{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["UserProfile","props","state","name","profesion","className","src","this","Component","Menu","value","href","url","Navegador","alt","type","data-toggle","id","class","onClick","handler","style","width","MainPanel","SideBar","toggle","bind","activo","addClass","setState","ContadorNumero","contador","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1083a3bc.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\n\nclass UserProfile extends Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      name: \"Faustino Loeza\",\n      profesion: \"FLP\",\n    }\n  }\n  render(){\n    return(\n        <div className=\"user-profile\">\n          <div className=\"user-image\">\n            <img src=\"https://civulflp2020.files.wordpress.com/2020/06/sdsd.jpg?w=300&h=289\"></img>\n          </div>\n          <div className=\"user-name\">\n              {this.state.name}\n          </div>\n          <div className=\"user-designation\">\n              {this.state.profesion}\n          </div>\n        </div>\n      );\n  }\n}\n\nclass Menu extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      value: null,\n    }\n  }\n  render(){\n    return(\n      \n        <li className=\"nav-item\">\n            <a className=\"nav-link\" href={this.props.url}>\n              <i className=\"icon-box menu-icon\"></i>\n              <span className=\"menu-title\">{this.props.value}</span>\n            </a>\n          </li>\n\n    );\n  }\n}\n\n\n\nclass Navegador extends Component{\n\n\n\n  render(){\n    return(\n\n      <nav className=\"navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\n      <div  className=\"text-center navbar-brand-wrapper d-flex align-items-center justify-content-center\">\n        <a className=\"navbar-brand brand-logo\" href=\"index.html\"><img src=\"codificacion.svg\" alt=\"logo\"></img></a>\n        <a className=\"navbar-brand brand-logo-mini\" href=\"index.html\"><img src=\"codificacion.svg\" alt=\"logo\"></img></a>\n\n      </div>\n\n      <div className=\"navbar-menu-wrapper d-flex align-items-center justify-content-end\">\n        <button className=\"navbar-toggler navbar-toggler align-self-center\" type=\"button\" data-toggle=\"minimize\">\n          <span className=\"icon-menu\"></span>\n        </button>\n        <ul className=\"navbar-nav mr-lg-2\">\n          <li className=\"nav-item nav-search d-none d-lg-block\">\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"search\">\n                  <i className=\"icon-search\"></i>\n                </span>\n              </div>\n              \n            </div>\n          </li>\n        </ul>\n        <ul className=\"navbar-nav navbar-nav-right\">\n            <li className=\"nav-item dropdown d-lg-flex d-none\">\n                <button type=\"button\" className=\"btn btn-info font-weight-bold\">Contactar</button>\n            </li>\n                 <button class=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" data-toggle=\"offcanvas\">\n          <img onClick = {this.props.handler} style={{width: 30 + 'px'}} src=\"menu.svg\" alt=\"logo\"></img>\n        </button>\n        </ul>\n        <button className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" data-toggle=\"offcanvas\">\n          <span className=\"icon-menu\"></span>\n        </button>\n      </div>\n    </nav>\n    );\n  }\n}\n\nclass MainPanel extends Component{\n  render(){\n    return(\n      <div className=\"main-panel\">\n       <Navegador  handler = {this.props.handler} />\n        <div className=\"content-wrapper\">\n          <div className=\"row\">\n            <div className=\"col-lg-12 grid-margin stretch-card\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h4 className=\"card-title\">React</h4>\n                  <p className=\"card-description\">\n                    Una biblioteca de JavaScript para construir interfaces de usuario\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      );\n  };\n  \n}\n\n\nclass SideBar extends Component {\n  constructor(props){\n    super(props);\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      activo: \"\",\n      addClass: true,\n    }\n  }\n  toggle() {\n    this.setState({addClass: !this.state.addClass});\n    if (this.state.addClass == true) {\n       this.setState({activo: \"active\"});\n    }else{\n      this.setState({activo: \"\"});\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"container-fluid page-body-wrapper\">\n      <nav className={`sidebar sidebar-offcanvas ${this.state.activo}`}  id=\"sidebar\">\n      <UserProfile/>\n      <ul className=\"nav\">\n      <Menu value={\"Django\"} url={\"django.html\"}/>\n      <Menu value={\"Flutter\"} url={\"flutter.html\"}/>\n      <Menu value={\"Javascript\"} url={\"javascript.html\"}/>\n      <Menu value={\"AWS\"} url={\"aws.html\"}/>\n      <Menu value={\"DB\"} url={\"db.html\"}/>\n      </ul>\n       </nav>\n       <MainPanel handler = {this.toggle}/ >\n       \n      </div>\n    );\n  }\n}\n\n\nclass Contador extends Component{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {contador:1};\n\t\tthis.setState({contador: 5*2});\n\t}\n\t\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<h1 onClick={()=>{this.setState({contador: this.state.contador*50});}}> HOLA </h1>\n\t\t\t\t<ContadorNumero contador={this.state.contador}/>\n\t\t\t</div>\n\t\t\t\n\t\t);\n\t}\n}\n\nclass ContadorNumero extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div className=\"card\">\n                <div className=\"card-body\">\n                  <p className=\"card-description\">\n                    {this.props.contador}\n                  </p>\n                </div>\n              </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction App() {\n\treturn (\n\t\t<SideBar/>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}